if @task.errors.empty?
  page.hide :errors
  page.insert_html :top, :tasks, :partial => 'task', :object => @task
  page[:task_form].reset
  page.visual_effect :highlight, @task.id.to_s
  page << "incrementCount();"

  # Add it to the user's lists and show unclaim if user is signed in
  #page.remove "claim"
  if user_signed_in?
    page.replace_html "your-lists", current_user.lists.collect { |l| "<li>#{link_to l.name, "/#{l.name}"}</li>" }.join()
    page.replace_html "claim", "<div id='claim' class='right'>#{link_to 'Unclaim', "/#{@list.name}/claim", :method => :post}</div>"
  else
    page.replace_html "claim", "<div id='claim' class='right'>#{link_to 'Claim', "/#{@list.name}/claim", :method => :post}</div>"
  end

else
  page.show :errors
  page.replace_html :errors, "Task cannot be blank"
end
